cmake_minimum_required(VERSION 3.10)
project(LibLibreTuner)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED TRUE)


find_package(Threads REQUIRED)


set(SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)


file(GLOB_RECURSE NETWORK_CAN_HEADERS ${SOURCE_DIR}/network/can/*.h)
file(GLOB_RECURSE NETWORK_ISOTP_HEADERS ${SOURCE_DIR}/network/isotp/*.h)
file(GLOB_RECURSE NETWORK_UDS_HEADERS ${SOURCE_DIR}/network/uds/*.h)
file(GLOB_RECURSE OS_HEADERS ${SOURCE_DIR}/os/*.h)
file(GLOB_RECURSE J2534_HEADERS ${SOURCE_DIR}/j2534/*.h)
file(GLOB_RECURSE DOWNLOAD_HEADERS ${SOURCE_DIR}/download/*.h)
file(GLOB_RECURSE AUTH_HEADERS ${SOURCE_DIR}/auth/*.h)
file(GLOB_RECURSE SUPPORT_HEADERS ${SOURCE_DIR}/support/*.h)
file(GLOB_RECURSE FLASH_HEADERS ${SOURCE_DIR}/flash/*.h)
file(GLOB_RECURSE DIAGNOSTICS_HEADERS ${SOURCE_DIR}/diagnostics/*.h)

file(GLOB_RECURSE NETWORK_CAN_SOURCES ${SOURCE_DIR}/network/can/*.cpp)
file(GLOB_RECURSE NETWORK_ISOTP_SOURCES ${SOURCE_DIR}/network/isotp/*.cpp)
file(GLOB_RECURSE NETWORK_UDS_SOURCES ${SOURCE_DIR}/network/uds/*.cpp)
file(GLOB_RECURSE OS_SOURCES ${SOURCE_DIR}/os/*.cpp)
file(GLOB_RECURSE J2534_SOURCES ${SOURCE_DIR}/j2534/*.cpp)
file(GLOB_RECURSE DOWNLOAD_SOURCES ${SOURCE_DIR}/download/*.cpp)
file(GLOB_RECURSE AUTH_SOURCES ${SOURCE_DIR}/auth/*.cpp)
file(GLOB_RECURSE SUPPORT_SOURCES ${SOURCE_DIR}/support/*.cpp)
file(GLOB_RECURSE FLASH_SOURCES ${SOURCE_DIR}/flash/*.cpp)
file(GLOB_RECURSE DIAGNOSTICS_SOURCES ${SOURCE_DIR}/diagnostics/*.cpp)


set(NETWORK_HEADERS
    ${NETWORK_CAN_HEADERS}
    ${NETWORK_ISOTP_HEADERS}
    ${NETWORK_UDS_HEADERS})

set(NETWORK_SOURCES
    ${NETWORK_CAN_SOURCES}
    ${NETWORK_ISOTP_SOURCES}
    ${NETWORK_UDS_SOURCES})



set(HEADERS
    ${NETWORK_HEADERS}
    ${OS_HEADERS}
	${J2534_HEADERS}
	${DOWNLOAD_HEADERS}
	${AUTH_HEADERS}
	${SUPPORT_HEADERS}
	${FLASH_HEADERS}
	${DIAGNOSTICS_HEADERS})
    
set(SOURCES
    ${NETWORK_SOURCES}
    ${OS_SOURCES}
	${J2534_SOURCES}
	${DOWNLOAD_SOURCES}
	${AUTH_SOURCES}
	${SUPPORT_SOURCES}
	${FLASH_SOURCES}
	${DIAGNOSTICS_SOURCES})


add_library(${PROJECT_NAME} ${HEADERS} ${SOURCES})
target_link_libraries(${PROJECT_NAME} ${CMAKE_THREAD_LIBS_INIT})
target_include_directories(${PROJECT_NAME} PUBLIC ${SOURCE_DIR})
